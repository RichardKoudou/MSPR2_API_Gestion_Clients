
name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      test_status: ${{ steps.tests.outputs.status }}
    env:
      NODE_ENV: test
      PORT: ${{ secrets.PORT }}
      APP_KEY: ${{ secrets.APP_KEY }}
      HOST: ${{ secrets.HOST }}
      LOG_LEVEL: info
      DB_HOST: localhost
      DB_PORT: 5432
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_DATABASE: ${{ secrets.DB_DATABASE }}
      IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }}
    services:
      postgres:
        image: postgres:15-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: ${{ env.DB_DATABASE }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U ${{ env.DB_USER }}; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Run database migrations
        run: node ace migration:run

      - name: Run tests
        id: tests
        run: |
          if npm test --exit; then
            echo "status=success" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "status=failure" >> $GITHUB_OUTPUT
            exit 1
          fi
        timeout-minutes: 5

      - name: Check test status
        if: always()
        run: |
          echo "Test status: ${{ steps.tests.outputs.status }}"
          if [[ "${{ steps.tests.outputs.status }}" != "success" ]]; then
            echo "Tests failed"
            exit 1
          fi

  deploy:
    name: Build and Deploy
    needs: test
    if: needs.test.outputs.test_status == 'success'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }}
    steps:
      - name: Debug test status
        run: echo "Received test status: ${{ needs.test.outputs.test_status }}"
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        timeout-minutes: 2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        timeout-minutes: 10
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline